@tailwind base;
@tailwind components;
@tailwind utilities;

/* Import Google Fonts - Philosopher, Lora, Karla, and JetBrains Mono */
@import url("https://fonts.googleapis.com/css2?family=Philosopher:wght@400;700&family=Lora:wght@400;500;600;700&family=Karla:wght@300;400;500;600&family=JetBrains+Mono:wght@400;500;600;700&display=swap");

/* Import highlight.js theme for syntax highlighting */
@import "highlight.js/styles/github-dark.css";

html {
  background: #252A34;
  color: #EAEAEA;
  /* Add smooth scrolling behavior */
  scroll-behavior: smooth;
}

/* Firefox scrollbar styling */
* {
  scrollbar-width: thin;
  scrollbar-color: #08D9D6 #252A34;
}

::-webkit-scrollbar {
  width: 14px;
  height: 18px;
  background: #252A34;
  border-radius: 10px;
}

::-webkit-scrollbar-thumb {
  background-color: #08D9D6;
  border-color: transparent;
  border-style: solid;
  border-width: 2px;
  background-clip: padding-box;
  border-radius: 10px;
}

::-webkit-scrollbar-thumb:hover {
  background-color: #FF2E63;
}
::-webkit-scrollbar-thumb:active {
  background-color: #FF2E63;
}

* {
  font-family: "Karla", sans-serif;
}

/* Typography hierarchy following Don't Make Me Think principles */
h1, h2, h3, h4, h5, h6 {
  font-family: "Philosopher", serif;
  font-weight: 700;
  color: #EAEAEA;
}

p, span, div {
  font-family: "Lora", serif;
  color: #EAEAEA;
}

button, a, input, select, label {
  font-family: "Karla", sans-serif;
}

/* Code blocks use JetBrains Mono */
code, pre, .hljs {
  font-family: "JetBrains Mono", monospace !important;
}

/* Add CSS for the gradient heading that was previously inline */
.gradient-heading {
  background: linear-gradient(to right, #ffffff, #d4d4d8);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

/* Rest of your CSS remains unchanged */
.overflow-small::-webkit-scrollbar {
  width: 8px;
  height: 18px;
  background: var(--scrollbar-background);
}

.squircle {
  border-radius: 25px / 20px; /* adjust values to your liking */
}

/* SPIN AVATAR */
.spin-avatar-dnd {
  background-color: red;
  border-radius: 50%;
  animation: slow-spin 2s linear infinite;
}
.spin-avatar-online {
  background-color: green;
  border-radius: 50%;
  animation: slow-spin 2s linear infinite;
}
.spin-avatar-idle {
  background-color: yellow;
  border-radius: 50%;
  animation: slow-spin 2s linear infinite;
}
.spin-avatar-offline {
  background-color: grey;
  border-radius: 50%;
  animation: slow-spin 2s linear infinite;
}

@keyframes slow-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.glitch {
  color: #fff;
  font-size: 9rem;
  font-weight: bold;
  position: relative;
  text-shadow:
    0 0 10px #ff00ff,
    0 0 20px #00ffff,
    0 0 30px #ffff00;
}

.glitch:before,
.glitch:after {
  content: attr(data-text);
  position: absolute;
  left: 0;
  text-shadow: none;
}

.glitch:before {
  top: 2px;
  text-shadow:
    0 2px 2px #ff00ff,
    0 4px 4px #00ffff;
  clip-path: polygon(0 0, 100% 0, 100% 33%, 0 33%);
  animation: glitch-anim-1 2s infinite linear alternate-reverse;
}

.glitch:after {
  top: -2px;
  text-shadow:
    0 -2px 2px #ffff00,
    0 -4px 4px #ff00ff;
  clip-path: polygon(0 66%, 100% 66%, 100% 100%, 0 100%);
  animation: glitch-anim-2 2s infinite linear alternate-reverse;
}

@keyframes glitch-anim-1 {
  0% {
    clip-path: polygon(0 0, 100% 0, 100% 33%, 0 33%);
    transform: translate(0, 0);
  }
  25% {
    clip-path: polygon(0 0, 100% 0, 100% 50%, 0 50%);
    transform: translate(4px, -4px);
  }
  50% {
    clip-path: polygon(0 0, 100% 0, 100% 70%, 0 70%);
    transform: translate(-4px, 4px);
  }
  75% {
    clip-path: polygon(0 0, 100% 0, 100% 40%, 0 40%);
    transform: translate(4px, 0);
  }
  to {
    clip-path: polygon(0 0, 100% 0, 100% 60%, 0 60%);
    transform: translate(-4px, -4px);
  }
}

@keyframes glitch-anim-2 {
  0% {
    clip-path: polygon(0, 66%, 100% 66%, 100% 100%, 0 100%);
    transform: translate(0, 0);
  }
  25% {
    clip-path: polygon(0 50%, 100% 50%, 100% 100%, 0 100%);
    transform: translate(-4px, 4px);
  }
  50% {
    clip-path: polygon(0 30%, 100% 30%, 100% 100%, 0 100%);
    transform: translate(4px, -4px);
  }
  75% {
    clip-path: polygon(0 40%, 100% 40%, 100% 100%, 0 100%);
    transform: translate(-4px, 0);
  }
  to {
    clip-path: polygon(0 20%, 100% 20%, 100% 100%, 0 100%);
    transform: translate(4px, 4px);
  }
}

.text-circle {
  font-size: 16px;
  margin-bottom: 5px;
}
.text-online {
  color: #46f154;
}

/* Code block styling */
.code-block-wrapper {
  position: relative;
  margin: 1.5rem 0;
}

.code-block-wrapper pre {
  margin: 0;
  padding: 1.5rem;
  border-radius: 0.5rem;
  overflow-x: auto;
}

.code-block-wrapper pre code {
  font-family: "JetBrains Mono", monospace;
  font-size: 0.875rem;
  line-height: 1.6;
  font-weight: 400;
}

/* Apply JetBrains Mono to all code elements */
code,
pre,
.hljs {
  font-family: "JetBrains Mono", monospace !important;
}

/* Timeline effect for blog cards */
.timeline-container {
  position: relative;
}

.timeline-container::before {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  width: 2px;
  background: linear-gradient(to bottom, #08D9D6, #FF2E63, #EAEAEA);
}
