@tailwind base;
@tailwind components;
@tailwind utilities;

/* Import Google Font - JetBrains Mono for code blocks */
@import url("https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@400;500;600;700&display=swap");

/* Import highlight.js theme for syntax highlighting */
@import "highlight.js/styles/github-dark.css";

html {
  background: rgb(0, 0, 0);
  color: #fff;
  /* Add smooth scrolling behavior */
  scroll-behavior: smooth;
}

/* Firefox scrollbar styling */
* {
  scrollbar-width: thin;
  scrollbar-color: #101010 #000000;
}

::-webkit-scrollbar {
  width: 14px;
  height: 18px;
  background: #000000; /* change the background color to black */
  border-radius: 10px; /* add border radius to make corners rounded */
}

::-webkit-scrollbar-thumb {
  background-color: #101010;
  border-color: transparent;
  border-style: solid;
  border-width: 2px;
  background-clip: padding-box;
  border-radius: 10px; /* add border radius to make corners rounded */
}

::-webkit-scrollbar-thumb:hover {
  background-color: #212121;
}
::-webkit-scrollbar-thumb:active {
  background-color: #2e2e2e;
}

* {
  font-family: "Karla", sans-serif;
}

/* Organic blob shapes */
.blob {
  border-radius: 30% 70% 70% 30% / 30% 30% 70% 70%;
  animation: morphBlob 8s ease-in-out infinite;
}

@keyframes morphBlob {
  0%,
  100% {
    border-radius: 30% 70% 70% 30% / 30% 30% 70% 70%;
  }
  25% {
    border-radius: 58% 42% 75% 25% / 76% 46% 54% 24%;
  }
  50% {
    border-radius: 50% 50% 33% 67% / 55% 27% 73% 45%;
  }
  75% {
    border-radius: 33% 67% 58% 42% / 63% 68% 32% 37%;
  }
}

.blob-slow {
  animation: morphBlobSlow 12s ease-in-out infinite;
}

@keyframes morphBlobSlow {
  0%,
  100% {
    border-radius: 40% 60% 60% 40% / 40% 40% 60% 60%;
  }
  33% {
    border-radius: 70% 30% 50% 50% / 60% 70% 30% 40%;
  }
  66% {
    border-radius: 40% 60% 70% 30% / 50% 50% 50% 50%;
  }
}

/* Curved section dividers */
.curve-top {
  position: relative;
}

.curve-top::before {
  content: "";
  position: absolute;
  top: -50px;
  left: 0;
  width: 100%;
  height: 50px;
  background: inherit;
  clip-path: ellipse(100% 100% at 50% 100%);
}

/* Diagonal sections */
.diagonal-section {
  transform: skewY(-3deg);
}

.diagonal-section > * {
  transform: skewY(3deg);
}

/* Floating animation */
@keyframes float {
  0%,
  100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-20px);
  }
}

.float {
  animation: float 6s ease-in-out infinite;
}

/* Wavy border effect */
.wavy-border {
  position: relative;
  overflow: visible;
}

.wavy-border::after {
  content: "";
  position: absolute;
  bottom: -10px;
  left: 0;
  width: 100%;
  height: 10px;
  background: linear-gradient(90deg, transparent, currentColor, transparent);
  clip-path: polygon(
    0 0,
    5% 100%,
    10% 0,
    15% 100%,
    20% 0,
    25% 100%,
    30% 0,
    35% 100%,
    40% 0,
    45% 100%,
    50% 0,
    55% 100%,
    60% 0,
    65% 100%,
    70% 0,
    75% 100%,
    80% 0,
    85% 100%,
    90% 0,
    95% 100%,
    100% 0
  );
}

/* Organic card shape */
.organic-card {
  border-radius: 40% 60% 50% 50% / 60% 30% 70% 40%;
  position: relative;
  overflow: hidden;
}

/* Flowing gradient background */
.flowing-gradient {
  background: linear-gradient(
    -45deg,
    rgba(59, 130, 246, 0.1),
    rgba(99, 102, 241, 0.1),
    rgba(139, 92, 246, 0.1),
    rgba(59, 130, 246, 0.1)
  );
  background-size: 400% 400%;
  animation: gradientFlow 15s ease infinite;
}

@keyframes gradientFlow {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

/* Tear drop shape */
.tear-drop {
  border-radius: 50% 50% 50% 0;
  transform: rotate(-45deg);
}

/* Asymmetric pentagon */
.pentagon {
  clip-path: polygon(50% 0%, 100% 38%, 82% 100%, 18% 100%, 0% 38%);
}

/* Hexagon shape */
.hexagon {
  clip-path: polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%);
}

/* Parallelogram shape */
.parallelogram {
  transform: skew(-20deg);
}

.parallelogram > * {
  transform: skew(20deg);
}

/* Add CSS for the gradient heading that was previously inline */
.gradient-heading {
  background: linear-gradient(to right, #ffffff, #d4d4d8);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

/* Rest of your CSS remains unchanged */
.overflow-small::-webkit-scrollbar {
  width: 8px;
  height: 18px;
  background: var(--scrollbar-background);
}

.squircle {
  border-radius: 25px / 20px; /* adjust values to your liking */
}

/* SPIN AVATAR */
.spin-avatar-dnd {
  background-color: red;
  border-radius: 50%;
  animation: slow-spin 2s linear infinite;
}
.spin-avatar-online {
  background-color: green;
  border-radius: 50%;
  animation: slow-spin 2s linear infinite;
}
.spin-avatar-idle {
  background-color: yellow;
  border-radius: 50%;
  animation: slow-spin 2s linear infinite;
}
.spin-avatar-offline {
  background-color: grey;
  border-radius: 50%;
  animation: slow-spin 2s linear infinite;
}

@keyframes slow-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.glitch {
  color: #fff;
  font-size: 9rem;
  font-weight: bold;
  position: relative;
  text-shadow:
    0 0 10px #ff00ff,
    0 0 20px #00ffff,
    0 0 30px #ffff00;
}

.glitch:before,
.glitch:after {
  content: attr(data-text);
  position: absolute;
  left: 0;
  text-shadow: none;
}

.glitch:before {
  top: 2px;
  text-shadow:
    0 2px 2px #ff00ff,
    0 4px 4px #00ffff;
  clip-path: polygon(0 0, 100% 0, 100% 33%, 0 33%);
  animation: glitch-anim-1 2s infinite linear alternate-reverse;
}

.glitch:after {
  top: -2px;
  text-shadow:
    0 -2px 2px #ffff00,
    0 -4px 4px #ff00ff;
  clip-path: polygon(0 66%, 100% 66%, 100% 100%, 0 100%);
  animation: glitch-anim-2 2s infinite linear alternate-reverse;
}

@keyframes glitch-anim-1 {
  0% {
    clip-path: polygon(0 0, 100% 0, 100% 33%, 0 33%);
    transform: translate(0, 0);
  }
  25% {
    clip-path: polygon(0 0, 100% 0, 100% 50%, 0 50%);
    transform: translate(4px, -4px);
  }
  50% {
    clip-path: polygon(0 0, 100% 0, 100% 70%, 0 70%);
    transform: translate(-4px, 4px);
  }
  75% {
    clip-path: polygon(0 0, 100% 0, 100% 40%, 0 40%);
    transform: translate(4px, 0);
  }
  to {
    clip-path: polygon(0 0, 100% 0, 100% 60%, 0 60%);
    transform: translate(-4px, -4px);
  }
}

@keyframes glitch-anim-2 {
  0% {
    clip-path: polygon(0, 66%, 100% 66%, 100% 100%, 0 100%);
    transform: translate(0, 0);
  }
  25% {
    clip-path: polygon(0 50%, 100% 50%, 100% 100%, 0 100%);
    transform: translate(-4px, 4px);
  }
  50% {
    clip-path: polygon(0 30%, 100% 30%, 100% 100%, 0 100%);
    transform: translate(4px, -4px);
  }
  75% {
    clip-path: polygon(0 40%, 100% 40%, 100% 100%, 0 100%);
    transform: translate(-4px, 0);
  }
  to {
    clip-path: polygon(0 20%, 100% 20%, 100% 100%, 0 100%);
    transform: translate(4px, 4px);
  }
}

.text-circle {
  font-size: 16px;
  margin-bottom: 5px;
}
.text-online {
  color: #46f154;
}

/* Code block styling */
.code-block-wrapper {
  position: relative;
  margin: 1.5rem 0;
}

.code-block-wrapper pre {
  margin: 0;
  padding: 1.5rem;
  border-radius: 0.5rem;
  overflow-x: auto;
}

.code-block-wrapper pre code {
  font-family: "JetBrains Mono", monospace;
  font-size: 0.875rem;
  line-height: 1.6;
  font-weight: 400;
}

/* Apply JetBrains Mono to all code elements */
code,
pre,
.hljs {
  font-family: "JetBrains Mono", monospace !important;
}

/* Timeline effect for blog cards */
.timeline-container {
  position: relative;
}

.timeline-container::before {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  width: 2px;
  background: linear-gradient(to bottom, #3b82f6, #64748b, #475569);
}
